// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using FIRSTWA_Recorder;
//
//    var match = Match.FromJson(jsonString);

namespace FIRSTWA_Recorder
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Match
    {
        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("comp_level")]
        public string CompLevel { get; set; }

        [JsonProperty("set_number")]
        public long SetNumber { get; set; }

        [JsonProperty("match_number")]
        public long MatchNumber { get; set; }

        [JsonProperty("alliances")]
        public Alliances Alliances { get; set; }

        [JsonProperty("winning_alliance")]
        public string WinningAlliance { get; set; }

        [JsonProperty("event_key")]
        public string EventKey { get; set; }

        [JsonProperty("time")]
        public long Time { get; set; }

        [JsonProperty("predicted_time")]
        public long PredictedTime { get; set; }

        [JsonProperty("actual_time")]
        public long ActualTime { get; set; }
    }

    public partial class Alliances
    {
        [JsonProperty("blue")]
        public Blue Blue { get; set; }

        [JsonProperty("red")]
        public Blue Red { get; set; }
    }

    public partial class Blue
    {
        [JsonProperty("score")]
        public long Score { get; set; }

        [JsonProperty("team_keys")]
        public List<string> TeamKeys { get; set; }

        [JsonProperty("surrogate_team_keys")]
        public List<string> SurrogateTeamKeys { get; set; }

        [JsonProperty("dq_team_keys")]
        public List<string> DqTeamKeys { get; set; }
    }

    public partial class Match
    {
        public static List<Match> FromJson(string json) => JsonConvert.DeserializeObject<List<Match>>(json, FIRSTWA_Recorder.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<Match> self) => JsonConvert.SerializeObject(self, FIRSTWA_Recorder.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
